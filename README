	In this homework I created the specified functions for the file system. The most difficult of them being the read and write functions. Within the read function I first error checked to make sure that the variables passed into the function were valid. Then, I would then get the bytes I plan on reading, if the given bytes and offset is larger than the file. I then found the head of the file, the offset, and how many blocks into the file the offset was. After getting this, I would then traverse through the FAT to get to the block where the offset is. I then had a while loop that would loop until there were no more bytes to read or if I got to the end of the file. Inside that loop I would read the contents of the file into the buffer that I created and then memcpy'd this data into the buffer provided. I would then update the offset for the file and return the amount of bytes read from the file. In the write function, I agian made sure the file desxriptor was valid. I would then find the offset, head, number of blocks in the offset is, and then where in that block the offset it. After getting these, I would first check to see if this file has a size, and if it did I owuld then traverse through the FAT to find the needed block. I then have a while loop that would go as long has there were bytes to be written and then after the block where the offset was, I would find the next available block and then write into that one, linking them together. I kept track of how many bytes were written so that I could update the size and also return that value.

	Issues: Some Issues I ran into was with the reading and writing. For these functions I was confused on how and where to store the data and how to properly transfer it. Once I thought of using a personal buffer and memcpy, it made it a lot easier. I was also having trouble finding the next open FAT block, and I fixed this issue by having a helper function for it. Additionally, for truncate it was difficult to keep track of freeing up the FAT blocks as I cut them off from the file.
